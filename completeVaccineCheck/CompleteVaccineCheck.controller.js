sap.ui.define(["sap/sf/workflow/returntoworkplace_employee/controller/BaseController","sap/ui/model/json/JSONModel","sap/ui/core/library","sap/m/MessageToast"],function(e,t,i,a){"use strict";var s=i.ValueState;return e.extend("workzone2.workzonehr.sap.sf.workflow.returntoworkplace_employee.reviewOfficeReadiness.ReviewOfficeReadiness",{onInit:function(){this.card=this.getOwnerComponent().card;let e=new t;let i=sap.ui.require.toUrl("sap/sf/workflow/returntoworkplace_employee/completeVaccineCheck/VaccineGuidanceCheckItems.json");this.getView().setModel(e,"items");e.loadData(i,null,false);this.items=this.getView().getModel("items").getProperty("/updateVaccineStatus");this.selectVaccineStatusItemTemp=this.items[1].picklistItem;this.noCacheAndInitAlreadyFlag=false;let a=this.card.getCombinedParameters().loginUser;let s=this.getParameters().mdfObjectVaccine.value;e.setProperty("/mdfObjConfigCorrect",true);let l=this.items.map(e=>e.mdfKey).join(",");this.card.request({url:"{{destinations.sfDestination}}/odata/v2/$batch",method:"POST",withCredentials:true,batch:{vaccine:{method:"GET",url:`${s}?$filter=externalCode eq '${a}'&$select=${l}`,headers:{Accept:"application/json"}}}}).then(e=>e.vaccine).then(t=>{if(t.d.results.length>0){e.setProperty("/mdfObjectData",t.d.results[0])}}).catch(t=>{console.error(`MDF Object configuration error`,t);e.setProperty("/mdfObjConfigCorrect",false);this.getGlobalModel().setProperty("/mdfObjConfigCorrect",false)})},onAfterRendering:function(){let e=this.getView().getModel("items");this.prepareItems(e,"/reviewVaccineGuidance");this.generateInputForm(e,"/updateVaccineStatus");e.setProperty("/reviewVaccineGuidanceTitle",this.getParameters()["reviewVaccineGuidanceTitle"].value);e.setProperty("/updateVaccineStatusTitle",this.getParameters()["updateVaccineStatusTitle"].value);this.checkValidated()},prepareItems:function(e,t){let i=e.getProperty(t);let a=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);const s=this.getI18nResource();const l=this.getParameters();for(let e=i.length-1;e>=0;e--){const c=i[e];c.checkBoxI18n=s.getText(c.checkBoxText);let r=l[c.id+"Label"].value;c.linkText=r;c.link=l[c.id+"URL"].value;c.linkVisible=!this.isStringEmpty(c.link);if(this.isStringEmpty(c.checkBoxText)&&this.isStringEmpty(r)){i.splice(e,1)}if(a){c.selected=a[`${t}/${e}`]}}},generateInputForm:function(e,t){let i=e.getProperty(t);const a=this.getI18nResource();for(let t=0;t<i.length;t++){let l=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);let c=i[t];c.valueState=s.None;switch(c.type){case"pickList":c.localizedLabel=a.getText(c.label);c.picklistItem.forEach(e=>{e.key=e.externalCode;e.text=a.getText(e.label)});if(this.checkCacheExistAndInit()){c.selectedKey=l[c.id]}else if(this.checkMdfObjExist()){let t=e.getProperty("/mdfObjectData");c.selectedKey=t[c.mdfKey];this.initCache(c.id,c.selectedKey)}else{c.selectedKey=c.defaultSelectedKey;this.initCache(c.id,c.selectedKey)}break;case"date":c.localizedLabel=a.getText(c.label);if(this.checkCacheExistAndInit(c)){if(l[c.id]){let e=new Date(l[c.id]);c.dateValue=e}}else if(this.checkFieldOfMdfObjExist(c)){let t=e.getProperty("/mdfObjectData");if(t[c.mdfKey]){let e=t[c.mdfKey];let i=/[1-9][0-9]*/g;let a=new Date(parseInt(e.match(i)[0]));c.dateValue=a;this.initCache(c.id,a.valueOf())}}break;default:console.error("Error type of configuration.")}}this.applyRulesToInputItem()},applyRulesToInputItem:function(){let e=this.items;let t=this.selectVaccineStatusItemTemp;this.items[1].picklistItem=t;let i=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);if(i["VaccinatedYet"]==="yes"){e[1].picklistItem=e[1].picklistItem.filter(e=>e.externalCode==="FDV"||e.externalCode==="FV");if(i["VaccineStatus"]==="FV"){e[2].enabled=true;e[3].enabled=true}else if(i["VaccineStatus"]==="FDV"){e[2].enabled=true;this._clearDatePickerValueAndCache(["SecondDoseDate"])}else{this._clearDatePickerValueAndCache(["FirstDoseDate","SecondDoseDate"])}}if(i["VaccinatedYet"]==="no"){e[1].picklistItem=e[1].picklistItem.filter(e=>e.externalCode==="PD"||e.externalCode==="DC");this._clearDatePickerValueAndCache(["FirstDoseDate","SecondDoseDate"])}},_clearDatePickerValueAndCache:function(e){let t=this.items;let i=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);e.forEach(e=>{i[e]=null;t.filter(t=>t.id===e).forEach(e=>{e.enabled=false;e.dateValue=null})})},selectVaccineCheckItem:function(e){this.checkCacheExistAndInit();let t=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);t[e.getSource().getBindingContext("items").getPath()]=e.getParameter("selected")},initCache:function(e,t){let i=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);i[e]=t},updatePicklistCache:function(e,t){this.checkCacheExistAndInit();let i=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);let a=e.getSource();let l=a.getSelectedKey();let c=a.getValue();if(!l&&c){a.setValueState(s.Error);i[t.pickListId]=null}else{a.setValueState(s.None);i[t.pickListId]=l}this.checkValidated();if(t.pickListId==="VaccinatedYet"){this.items[1].selectedKey="";i["VaccineStatus"]=null}this.applyRulesToInputItem()},updateDatePickerCache:function(e,t){this.checkCacheExistAndInit();let i=e.getSource();let a=e.getParameter("valid");if(!a){i.setValue("")}let l=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);this.items.filter(e=>e.id===t.datePickerId).forEach(e=>l[t.datePickerId]=e.dateValue===null?null:e.dateValue.valueOf());let c=this.items[2],r=this.items[3];if(c.dateValue&&r.dateValue&&r.dateValue<=c.dateValue){c.valueState=s.Error;r.valueState=s.Error}else{c.valueState=s.None;r.valueState=s.None}this.checkValidated()},checkFieldOfCacheExist:function(e){let t=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);return!!t[e.id]},checkCacheExistAndInit:function(){if(this.noCacheAndInitAlreadyFlag){return false}let e=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);if(!e||Object.keys(e).length===0){this.getGlobalModel().setProperty(`/cache/${this.getView().cacheId}`,{});this.noCacheAndInitAlreadyFlag=true;return false}return true},checkValidated:function(){let e=false;this.items.forEach(t=>{if(t.valueState===s.Error){e=true}else if(t.required){if(!this.checkFieldOfCacheExist(t)){e=true;t.valueState=s.Error}}});let t=this.getView().step;let i=this.getGlobalModel().getProperty(`/stepId/completeLearningCourses`);let a=this.getOwnerComponent().byId(i);t.setValidated(true);if(this.getGlobalModel().getProperty("/MandatoryCourseComplete")===true){a.setValidated(true)}if(e){t.setValidated(false);a.setValidated(false)}},checkFieldOfMdfObjExist:function(e){let t=this.getView().getModel("items").getProperty("/mdfObjectData");return!!(t&&t[e.mdfKey])},checkMdfObjExist:function(){return!!this.getView().getModel("items").getProperty("/mdfObjectData")},_generateIdOfMdfObject:function(){let e=this.card.getCombinedParameters().loginUser;let t=this.getParameters().mdfObjectVaccine.value;let i=this.getView().getModel("items");if(this.checkMdfObjExist()){let e=i.getProperty("/mdfObjectData");this.metadataToPost=e.__metadata}else{let i=(new Date).toISOString();let a=`effectiveStartDate=datetimeoffset'${i}',externalCode='${e}'`;this.metadataToPost={uri:`${t}(${a})`,type:`SFOData.${t}`}}},upsertMdfObject:function(){if(!this.getParameters().vaccineStepEnable.value||!this.getView().getModel("items").getProperty("/mdfObjConfigCorrect")){return}this._generateIdOfMdfObject();let e=this.metadataToPost;let t={__metadata:e};let i=this.getGlobalModel().getProperty(`/cache/${this.getView().cacheId}`);if(!i||Object.keys(i).length===0){console.log("No change");return}let s=this.items;s.forEach(e=>{if(i[e.id]){switch(e.type){case"pickList":t[e.mdfKey]=i[e.id];break;case"date":if(i[e.id]){t[e.mdfKey]=`/Date(${i[e.id]})/`}}}});const l=this.getI18nResource();let c=l.getText("MDFOBJECT_UPSERT_ERROR_MESSAGE");this.getOwnerComponent().card.request({url:`{{destinations.sfDestination}}/odata/v2/upsert`,method:"POST",headers:{accept:"application/json","Content-Type":"application/json"},withCredentials:true,parameters:t}).then(e=>{if(e.d[0].status==="OK"){console.log("success")}else{console.error(e.d[0].message);a.show(c)}}).catch(e=>{console.error(e);a.show(c)})},beforeStepComplete:function(){this.upsertMdfObject()},beforeWizardComplete:function(){this.upsertMdfObject()}})});
